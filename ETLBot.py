import random
import re
from settings import bot
from telebot import types
import BaseETLBot


class Addword:
    id_user_word = None
    new_rus_word = None
    new_eng_word = None
    id_add_word = 0


class Command:
    """–í—Å–µ –∫–Ω–æ–ø–∫–∏ —Ç—É—Ç"""
    registation = types.KeyboardButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üÜó")
    next_word = types.KeyboardButton("–î–∞–ª–µ–µ ‚è©")
    add_word = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï")
    my_word = types.KeyboardButton("–ú–æ–∏ —Å–ª–æ–≤–∞ ‚úç")
    help_b = types.KeyboardButton("–ü–æ–º–æ—â—å üí¨")
    btn_start = types.KeyboardButton("–ó–∞–ø—É—Å–∫ üÜó")
    back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚è™")
    my_experience = types.KeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è üèÜ")


@bot.message_handler(commands=['start'])
def send_welcome(message):
    global user_info
    user_info = message.from_user.first_name
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    user_id = message.from_user.id  # –ø–µ—Ä–µ–¥–∞—é –≤ –±–∞–∑—É –∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    check_registration = BaseETLBot.check_registration(user_id)  # –∑–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if check_registration is None:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç = —Å–æ–∑–¥–∞—ë–º
        btn_first = types.KeyboardButton(Command.registation.text)
    else:
        btn_first = types.KeyboardButton(Command.btn_start.text)
    markup.add(btn_first, Command.help_b)
    bot.reply_to(message, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π {user_info} üëã \n"
                          f"–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É. \n"
                          "–ë–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç - 9954 —Å–ª–æ–≤–∞üß°"
                          "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –í–∞—Å —Ç–µ–º–ø–µ –∏ –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –≤–µ—Ä–º—è ‚åö. \n"
                          "–£ –í–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏—á–Ω—ã–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –í–∞–º.\n"
                          "–í—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è üíé.  \n"
                          "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é ‚¨áÔ∏è", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == Command.help_b.text)
def help_message(message):
    """–í—Å—ë –ø—Ä–æ—Å—Ç–æ —ç—Ç–æ HELP"""
    bot.reply_to(message, f"–û–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ —Ñ—É–Ω–∫—Ü–∏–π –∫–Ω–æ–ø–æ–∫ üìë\n"
                          f"–ü–µ—Ä–≤—ã–µ —á–µ—Ç—ã—Ä–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–π –ë–æ—Ç –í–∞–º "
                          f"–ø—Ä–µ–¥–ª–æ–∂–∏–ª. –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–µ—Ä–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç üé≤. "
                          f"–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã üí™, –∞ —Ç–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–≤–æ ‚è©\n"
                          f"| {Command.next_word.text} | –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–ª–æ–≤.\n"
                          f"| {Command.add_word.text} | –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–æ –Ω–∞ üá∑üá∫ –∏ üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø —è–∑—ã–∫–µ"
                          "–≤ –≤–∞—à—É –ª–∏—á–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π.\n"
                          f"| {Command.my_word.text} | –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –í–∞–º–∏ —Å–ª–æ–≤ \n"
                          f"| {Command.my_experience.text} | –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω—ã—Ö —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–π —Å–ª–æ–≤\n"
                          f"–í–Ω–∏–º–∞–Ω–∏–µ ‚Äº –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–ª–æ–≤–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∏ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ \n"
                          f"–ï—Å–ª–∏ –í—ã —Å–ª—É—á–∞–π–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –æ—à–∏–±–æ—á–Ω–æ–µ —Å–ª–æ–≤–æ üôÅ - –£–¥–∞–ª–∏—Ç–µ –µ–≥–æ ‚Äº\n"
                          f"–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–∏–≤—à–µ–º—É —Å–ª–æ–≤–æ üòú")


@bot.message_handler(func=lambda message: message.text == Command.registation.text)
def registartion(message):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –¥–ª—è —É—á—ë—Ç–∞ —Å–ª–æ–≤"""
    user_id = message.from_user.id  # –ø–µ—Ä–µ–¥–∞—é –≤ –±–∞–∑—É –∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    BaseETLBot.registration(user_info, user_id)
    bot.reply_to(message, f"–°–ø–∞—Å–∏–±–æ ü§ù, {user_info} –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–∞–Ω–Ω–æ–º—É –ë–æ—Ç—É üõ∏")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(Command.btn_start, Command.help_b)
    bot.send_message(message.chat.id, text=f"{user_info}. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –ó–∞–ø—É—Å–∫ ‚ö°", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == Command.btn_start.text)
def start_of_studies(message):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –∏ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª!"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    user_id = message.from_user.id
    random_word = BaseETLBot.get_random_word(user_id)
    rus_word = random_word[0][0]
    global eng_word
    eng_word = random_word[0][1]
    wrong_word_one = random_word[1][1]
    wrong_word_two = random_word[2][1]
    wrong_word_three = random_word[3][1]
    buttons = [eng_word, wrong_word_one, wrong_word_two, wrong_word_three]
    random.shuffle(buttons)
    markup.add(*buttons,
               Command.next_word,
               Command.add_word,
               Command.my_word,
               Command.my_experience,
               Command.help_b)
    message_question = ["–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ ?",
                        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ ?",
                        "–ö–∞–∫–æ–π –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ?",
                        "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è —Å–ª–æ–≤–æ ?",
                        "–í–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤–∞:",
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å –≤–µ—Ä–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:",
                        "–í—ã –∑–Ω–∞–µ—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞?,"
                        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –≤–µ—Ä–Ω—ã–º –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å–ª–æ–≤–∞."
                        "–£–≥–∞–¥–∞–µ—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏?"]
    random.shuffle(message_question)
    bot.send_message(message.chat.id, f"{message_question[0]} \n ‚≠ê {rus_word} ‚≠ê:", reply_markup=markup)
    BaseETLBot.add_victory(message.from_user.id, rus_word, eng_word)


@bot.message_handler(func=lambda message: message.text == Command.add_word.text)
def add_word(message):
    """–î–æ–±–∞–≤–ª—è—é —Å–ª–æ–≤–∞"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [Command.back]
    markup.add(*buttons)
    Addword.id_user_word = message.from_user.id
    if Addword.id_add_word == 0:
        bot.send_message(message.chat.id, f"–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ –∏ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥. \n"
                                          f"–í–≤–æ–¥ —Å–ª–æ–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã",
                         reply_markup=markup)
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ "
                                          f"–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: üìù")
    else:
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –∏ "
                                          f"–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: üìù", reply_markup=markup)
    bot.register_next_step_handler(message, send_add_word)


def send_add_word(message):
    """–ó–∞–ª–∏–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞"""
    rus_word = set('–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è')
    eng_word = set('abcdefghijklmnopqrstuvwxyz')
    regex = r'[\W\d]+'
    if message.text == Command.back.text:
        Addword.id_add_word = 0
        start_of_studies(message)
    elif Addword.id_add_word == 0:
        if (len(message.text) < 2 or message.text[0].islower()
                                or bool(re.search(regex, message.text))
                                or not message.text[1::].islower()
                                or message.text[1] not in rus_word):
            bot.send_message(message.chat.id, f"–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∫ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è! "
                                              f"–°–ª–æ–≤–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ó–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã."
                                              f"–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–≤–µ–¥–µ–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ")
            Addword.id_add_word = 0
            start_of_studies(message)
        else:
            Addword.new_rus_word = message.text
            result = BaseETLBot.get_check_word(Addword.id_user_word, Addword.new_rus_word)
            if result > 0:
                bot.send_message(message.chat.id, f"–°–ª–æ–≤–æ üá∑üá∫ {Addword.new_rus_word} —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π ")
                add_word(message)
            else:
                Addword.id_add_word = 1
                add_word(message)
    else:
        if (len(message.text) < 2 or message.text[0].islower()
                                  or bool(re.search(regex, message.text))
                                  or not message.text[1::].islower()
                                  or message.text[1] not in eng_word):
            bot.send_message(message.chat.id, f"–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∫ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è! "
                                              f"–°–ª–æ–≤–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ó–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã."
                                              f"–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–≤–µ–¥–µ–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ")
            Addword.id_add_word = 0
            start_of_studies(message)
        else:
            Addword.new_eng_word = message.text
            Addword.id_add_word = 0
            BaseETLBot.add_word_db(Addword.id_user_word, Addword.new_rus_word, Addword.new_eng_word)
            bot.send_message(message.chat.id, f"–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–ª–µ–Ω–æ —Å–ª–æ–≤–æ üá∑üá∫ {Addword.new_rus_word} –∏ \n"
                                              f"–ø–µ—Ä–µ–≤–æ–¥ üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†ÅøÛ†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†ÅøÛ†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø{Addword.new_eng_word}")


@bot.message_handler(func=lambda message: message.text == Command.back.text)
def send_cancel_word(message):
    """–í–æ–∑–≤—Ä–∞—Ç"""
    start_of_studies(message)


@bot.message_handler(func=lambda message: message.text == Command.my_word.text)
def my_word_list(message):
    """–ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö —Å–ª–æ–≤"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [Command.back]
    markup.add(*buttons)
    bot.send_message(message.chat.id, f"–í–æ—Ç –°–ø–∏—Å–æ–∫ –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –í–∞–º–∏ —Å–ª–æ–≤: "
                                      f"üìú{BaseETLBot.get_my_word(message.from_user.id)}üìú", reply_markup=markup)
    bot.send_message(message.chat.id, f"–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    bot.register_next_step_handler(message, del_word)


@bot.message_handler(func=lambda message: message.text == Command.my_experience.text)
def my_experience(message):

    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [Command.back]
    markup.add(*buttons)
    bot.send_message(message.chat.id,
                     f"–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤ - "
                     f"{BaseETLBot.get_experience(message.from_user.id)} ü•≥ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤)",
                     reply_markup=markup)


def del_word(message):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ–≤ –∏–ª–∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é"""
    if message.text == Command.back.text:
        start_of_studies(message)
    else:
        new_rus_word = message.text
        bot.send_message(message.chat.id, BaseETLBot.del_word_db(message.from_user.id, new_rus_word))


@bot.message_handler(func=lambda message: message.text == Command.next_word.text)
def next_word(message):
    """–ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤—ã–π –ª–∏—Å—Ç —Å–ª–æ–≤"""
    start_of_studies(message)


@bot.message_handler(func=lambda message: True, content_types=['text'])
def message_reply(message):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—à–µ–Ω–∏—è"""
    result = BaseETLBot.check_victory(message.from_user.id)
    Addword.id_user_word = message.from_user.id
    Addword.new_eng_word = message.text    
    message_win = ["–ê –í—ã –º–æ–ª–æ–¥–µ—Ü üß°. –í–µ—Ä–Ω–æ ‚úÖ",
                   "–£ –í–∞—Å –æ—Ç–ª–∏—á–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç üß°. –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ",
                   "–í—ã –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã üß°. –¢–∞–∫ —Ç–æ—á–Ω–æ ‚úÖ",
                   "–í—ã –±–µ—Å—Å–ø–æ—Ä–Ω–æ –ø—Ä–∞–≤—ã ‚úÖ",
                   "–ë–µ–∑—É–ø—Ä–µ—á–Ω–æ üß°. –£–≥–∞–¥–∞–ª–∏ ‚úÖ",
                   "–û—á–µ—Ä–µ–¥–Ω–æ–π —É—Å–ø–µ—Ö ‚úÖ",
                   "–í–µ—Ä–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π ‚úÖ",
                   "–û—Ç–ª–∏—á–Ω–æ, –í—ã –ø—Ä–∞–≤—ã ‚úÖ",
                   "–ë–µ–∑—É–ø—Ä–µ—á–Ω–æ ‚úÖ",
                   "–°—É–ø–µ—Ä. –í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ"]
    random.shuffle(message_win)

    message_lose = ["–£–≤—ã –æ—à–∏–±–∫–∞ üôÅ, –Ω–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ ‚úÖ",
                    "–û—à–∏–±–ª–∏—Å—å üôÑ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É ‚úÖ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–∞–ª–µ–µ ‚è©",
                    "–í—ã –±—ã–ª–∏ –æ—á–µ–Ω—å –±–ª–∏–∑–∫–∏ –∫ –≤–µ—Ä–Ω–æ–º—É –ø–µ—Ä–µ–≤–æ–¥—É üôÉ",
                    "–ü–æ–ø—ã—Ç–∫–∞ –Ω–µ –ø—ã—Ç–∫–∞ üòò. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ ‚úÖ",
                    "–û–π –û–π, —á—É—Ç—å —á—É—Ç—å –Ω–µ —Ç–∞–∫. –ï—â—ë —Ä–∞–∑? ‚úÖ",
                    "–ù–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å, –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è ‚úÖ",
                    "–ù–∞ –æ—à–∏–±–∫–∞—Ö —É—á–∞—Ç—Å—è. –ï—â—ë —Ä–∞–∑–æ–∫ ‚úÖ",
                    "–£ –í–∞—Å —Ç–æ—á–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –µ—â—ë ‚úÖ",
                    "–ù—É –Ω–∏—á–µ–≥–æ —Å—Ç–∞—à–Ω–æ–≥–æ .....üòÄ ‚úÖ",
                    "–ö–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –∫ –ø–æ–±–µ–¥–µ üí™",
                    "–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º üòú"]
    random.shuffle(message_lose)
    try:
        if message.text == result[0]:
            bot.send_message(message.chat.id, f"{message_win[0]}")
            bot.send_message(message.chat.id, f"–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º ‚è©‚è©‚è©")
            BaseETLBot.add_experience(Addword.id_user_word, Addword.new_eng_word)
            start_of_studies(message)
        else:
            bot.send_message(message.chat.id, f"{message_lose[0]}")
    except:
        start_of_studies(message)


if __name__ == '__main__':
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')
    bot.polling()
